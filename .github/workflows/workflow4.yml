name: Workflow 4

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  multibrowser:
    name: Web System Test on ${{ matrix.browser }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chrome, firefox, edge, safari]
        exclude:
          - os: ubuntu-latest
            browser: edge
          - os: ubuntu-latest
            browser: safari
          - os: windows-latest
            browser: safari
          - os: macos-latest
            browser: edge

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Chrome on Ubuntu
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'chrome'
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: latest

      - name: Install Firefox on Ubuntu
        if: matrix.os == 'ubuntu-latest' && matrix.browser == 'firefox'
        uses: browser-actions/setup-firefox@v1
        with:
          firefox-version: latest

      - name: Run Web System Tests on ${{ matrix.browser }}
        shell: bash
        run: |
          # En Ubuntu (cualquier navegador) arrancamos los tests dentro de Xvfb
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update && sudo apt-get install -y xvfb
            xvfb-run -a mvn test -Dtest=SeleniumInterfaceTest -Dbrowser=${{ matrix.browser }}
          else
            mvn test -Dtest=SeleniumInterfaceTest -Dbrowser=${{ matrix.browser }}
          fi

  loadtesting:
    name: Load Testing
    runs-on: ubuntu-latest
    needs: multibrowser
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Run Integration Test
        run: mvn test -Dtest=FilmServiceIntegrationTest

      - name: Run API Test
        run: mvn test -Dtest=APIRestTest

      - name: Run Unit Tests
        run: mvn test -Dtest=FilmServiceUnitTest

      - name: Generate tag
        id: project
        run: echo "DOCKER_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: mvn -DskipTests -Dspring-boot.build-image.imageName=${{ secrets.DOCKERHUB_USERNAME }}/nitflex-staging:${{ steps.project.outputs.tag }} spring-boot:build-image

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/nitflex-staging:${{ steps.project.outputs.tag }}

      - name: Deploy to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run az commands to deploy container
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name nitflex-staging \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/nitflex-staging:${{ steps.project.outputs.tag }} \
            --registry-login-server index.docker.io \
            --registry-username ${{ secrets.DOCKERHUB_USERNAME }} \
            --registry-password ${{ secrets.DOCKERHUB_READ_TOKEN }} \
            --dns-name-label nitflex-staging-${{ secrets.DOCKERHUB_USERNAME }} \
            --ports 8080 \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5

      - name: Run Smoke Test with Artillery
        uses: artilleryio/action-cli@v1
        with:
          command: run src/test/java/es/codeurjc/web/nitflex/smoke-test.yml

      - name: Run Load Test with Artillery
        uses: artilleryio/action-cli@v1
        with:
          command: run load-test.yml
